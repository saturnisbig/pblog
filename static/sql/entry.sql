
INSERT INTO `entries` (`title`, `categoryId`,`content`, `createdTime`, `modifiedTime`, `viewNum`, `commentNum`, `slug`)VALUES
('test entry', 0, 'asdgsadgasdg','2009-12-02 13:31:27', '2009-12-02 13:31:32', 0, 0, 'test-entry'),
('second test entry', 0, 'sdgasdgsadgsdgasdgas sdgasdg\r\nsdghasdhasdh\r\nsdhasdhsadh', '2009-12-01 13:31:57', '2009-12-01 13:32:00', 0, 0, 'second-test-entry'),
('大卫粘贴使用量突破100!', 0, '<p>十一前后的时候, 我做了一个简单的代码粘贴网, 功能比较简单, 但是速度还是比较快的, 主流的语言也都支持了.</p>\r\n\r\n<p>现在上线已经有一个月了, 使用量终于突破100了!</p>\r\n<p>第101贴是: http://david-paste.cn/paste/101/</p>\r\n\r\n<p>纪念一下!</p>\r\n<p>这里继续做广告, 如果你有一些代码需要给别人展示, 真的要考虑大卫粘贴, 又简单又好用, 访问地址 – http://david-paste.cn/</p>\r\n\r\nP.S. 现在上线的是大卫粘贴 0.2beta版, 0.3beta已经提上日程了, 无奈最近工作有些许忙, 透露一下, 0.3beta将采用web.py框架.', '2009-12-02 17:44:06', '2009-12-02 17:44:10', 0, 0, 'david-paste-100-pastes'),
('我的Linux系统之伤', '<p>使用linux已经有1年之久了, 期间换过很多发行版. 每个人都有自己的linux路线, 我的路线是, Redhat->Ubuntu->Debian->Suse(装了后没怎么用就删了)->Fedora(使用时间没超过一周)->CentOS(只能算尝试)->ArchLinux->Gentoo, 这个路线比较曲折.</p>\r\n\r\n<p>其中比较钟意的有Debian, Arch和Gentoo, 目前使用的是Gentoo. 对我来说, Debian足够稳定, 但是软件包比较老, Arch足够新, 但是又没Gentoo的portage灵活, Gentoo又新又灵活, 但是不厌其烦的升级+编译, 也让我开始有一些厌倦了.</p>\r\n\r\n<p>前两天看上了Sabayon, 感觉还不错, 今天试用了下, 非常的失望, 简直就是Gentoo里的Ubuntu啊, 安装程序本身就有bug, 点掉的东西依然会装上, 选择了xfce, 装上的却是Gnome, 中文支持也有很严重的问题, 字高矮不齐, 应该是字体选择的问题. 进入系统后, 由于Sabayon的源非常少, 所以只能用它的官方源, 在意大利, 速度只有30K上下, 实在不能忍受. Sabayon的包管理系统是Entropy, 也是由python写的, 工作原理与Portage相似, 只是Entropy安装的载体是二进制包, Portage是源码. 但是Entropy有个致命的弱点, 就是它的更新不支持断点续传, 如果你在更新到99%的时候掉线了, 或者由于任何原因断掉的话, 下一次的更新将是从头开始!!!这让人不能接受!!!</p>\r\n\r\n<p>其实Sabayon的本意也许是好的, 给想使用Gentoo, 又嫌编译麻烦的人, 创造一个接触Gentoo的好机会, 但是无奈现在它们的团队还不够成熟, 作出来的发行版离Ubuntu还相差甚远.</p>\r\n\r\n<p>其实, 我所说的这些, 总结成一句话就是, 我已经不知道该选择哪个linux了. Gentoo的portage系统很优秀, USE也很灵活, 让我爱不释手, 但是不停的编译让我有些许厌倦. Arch的包很新, 但是无奈软件仓库没有Gentoo大, aur又不能自定义USE来编译, 让人想爱又爱不起来. 唉, 无奈我已经习惯Gentoo的各种命令和各种配置文件的存放位置了, 看来习惯真的是很改掉的.</p>\r\n', '2009-12-02 17:49:51', '2009-12-02 17:49:54', 0, 0, 'linux-select'),
('使用jQuery创建可拖拽排序列表', '项目中需要用到拖拽排序,于是去研究了jQuery的UI,发现它提供了一种非常简单的方式来实现可视化排序.\n首先是html代码:\n<pre lang="html">\n<ul id="test">\n <li>first</li>\n <li>second</li>\n <li>third</li>\n</ul>\n<input id="test-button" type="button">\n<input id="show" type="text">\n</pre>\n然后在script中导入jQuery,ui.core和ui.sortable3个包:\n<pre lang="html">\n<script type="text/javascript" src="jquery.js"></script>\n<script type="text/javascript" src="ui.core.js"></script>\n<script type="text/javascript" src="ui.sortable.js"></script>\n</pre>\n对应的javascript脚本为:\n<pre lang="javascript">\n$(document).ready(function(){\n $(''#test'').sortable({\n items:''li''\n });\n $(''#test-button'').click(function(){\n $(''#show'').attr(''value'',$(''#test'').sortable(''toArray''));\n });\n});\n</pre>\n对上述代码的解释:\n要排序的东西放在ul里,用sortable()来使列表可排序,items指出要排序的元素,使用sortable(''toArray'')来获得当前的排序结果.', 1, '2009-03-19 09:42:57', '2009-03-19 09:42:57', 0, 0, 'jquery-drag-and-drop'),
('打造顺手的Vim环境', 'Vim超强的定制性为我们提供了很多便利，它众多的插件更是加速了我们的开发速度，下面就列出了笔者常用的几个插件：\r\n\r\n1.Nerd Tree -- 将目录和文件以树的形式显示在编辑器的左侧\r\n2.Taglist -- 快速定位程序的变量,函数和类,方便查找和修改\r\n3.Nerd Commenter -- 快速对代码进行注释,方便调试\r\n4.SnippetsEmu -- 提供TextMate般的快速代码片段录入\r\n<!--more-->\r\n下载地址为:\r\n1.<a href="http://www.vim.org/scripts/script.php?script_id=1658">NerdTree</a>\r\n2.<a href="http://www.vim.org/scripts/script.php?script_id=273">Taglist</a>\r\n3.<a href="http://www.vim.org/scripts/script.php?script_id=1218">Nerd Commenter</a>\r\n4.<a href="http://www.vim.org/scripts/script.php?script_id=1318">SnippetsEmu</a>\r\n\r\n安装方法非常的简单:\r\n1.前3个插件只要将下载下来的压缩包解压,然后将plugin目录里的文件放入~/.vim/plugin/目录,将doc目录的文件放入~/.vim/doc/目录即可,安装taglist的前提是系统必须安装有excuberant-ctags程序(Ubuntu和Debian用户可以从新立得里安装此程序,其它linux请搜索其安装方法).\r\n2.SnippetsEmu插件的安装稍微有点繁琐,方法为:将下载下来的压缩包解压,会得到2个.vba文件,分别用vim打开这2个文件,然后输入命令'':so %''进行安装即可.\r\n\r\n对插件的设置请参考上一篇日志:<a href="http://davidshieh.cn/index.php/2009/03/13/vim配置/">个人的vim配置</a>', 1, '2009-03-19 10:02:35', '2009-03-19 10:02:35', 0, 0, 'useful-vim-env'),
('PHP中的日期处理', '在PHP中处理日期非常的简单,尽管Mysql中有DateTime字段,但是使用起来还有没有PHP的time()函数方便.在数据库设计的时候,把存储时间的字段设置为int(11),存储数据的时候,该字段的数据为time()即可.time()函数的作用就是产生当前时间的时间戳,一般为一个11位的数字,例如1235035834.\n\n在我们要显示时间的时候,显示该时间戳自然不行,PHP里提供了date()函数来格式化该时间戳,比如我们使用date("Y-m-d H:i:s",1235035834)即可得到该时间戳的日期和时间,这里为"2009-02-19 17:30:34",非常的方便.date()函数接受2个参数,第一个为日期的格式,有很多参数来控制显示的格式,"Y"表示4位数的年,"m"表示2位数的月份,"d"表示2位数的天,"H"表示24小时制的小时,"i"表示分钟,"s"表示秒数,需要更多的格式,可以查阅官网的说明 &nbsp;:&nbsp; <a href="http://cn2.php.net/manual/en/function.date.php">Date函数</a>\n\n<span style="color: #ff0000;"><strong>还有一个函数strftime()也可以做日期的格式化,这2个函数的区别就是,部分的linux和所有的windows都不支持该函数,就是说,只有部分的linux可以使用该函数,所以,如果要写跨平台的PHP代码,还是要使用date()函数.</strong></span>', 1, '2009-03-19 10:16:50', '2009-03-19 10:16:50', 0, 0, 'PHP中的日期处理'),
( 'Apache基于端口的虚拟机的配置', '修改httpd.conf文件,加入以下代码:\n\n<pre lang="conf">\n#监听88端口\nListen 88\n#虚拟机的配置\n<virtualHost *:88>\n ServerAdmin webmaster@localhost\n DocumentRoot /home/icefox/phpmyadmin/ #该虚拟机的目录\n <directory /home/icefox/phpmyadmin/> #该目录的配置\n Options FollowSymLinks\n AllowOverride All #开启地址重写\n Order allow,deny #设置访问规则\n allow from all\n </directory>\n ErrorLog /var/log/apache2/error.log #设置改虚拟机的错误日志文件的存放地址\n</virtualHost>\n</pre>\n\n修改完一定要重启apache使新配置生效.', 1, '2009-03-19 10:24:52', '2009-03-19 10:24:52', 0, 0, 'Apache基于端口的虚拟机的配置'),
( '使用PIL按比例做缩略图', '项目中遇到头像的制作~这里使用的方法会不失比例的缩放图片~代码:\n<pre lang="python">\nim = Image.open(''ceshi.jpg'')\nsize = im.size\nif size[0] > size[1]:\n rate = float(120) / float(size[0])\nelse:\n rate = float(90) / float(size[1])\nnew_size = (int(size[0] * rate), int(size[1] * rate))\nnew = im.resize(new_size, Image.BILINEAR)\nnew.save(''new.jpg'')\n</pre>\n唯一值得注意的地方算比例的时候,一定记得加float,不然算出来的比例会是0,然后就是算生成的缩略图大小的时候,要用int,这样算出来的大小才会是整数.', 1, '2009-03-22 23:34:47', '2009-03-22 23:34:47', 0, 0, '使用PIL按比例做缩略图'),
( 'Yii拾遗(陆续添加中)', '<strong>1.View中的语法.</strong>\nYii在view里使用自己的语法,常用的是if语句和foreach语句,跟php的语法非常相似.if的语法为:\n<pre lang="PHP">\n<?php if ($foo): ?>\n <?php echo $foo; ?>\n<?php elseif ($bar): ?>\n <?php echo $bar; ?>\n<?php else: ?>\n <?php echo "nothing..."; ?>\n<?php endif; ?>\n</pre>\nforeach的语法为:\n<pre lang="PHP">\n<?php foreach ($ones as $key => $value): ?>\n <?php echo "key is ".$key " ---- ."value is ".$value; ?>\n<?php endforeach; ?>\n</pre>\n基本和php的语法相同,只是这里没有大括号,全部由'':''来代替,结束的时候使用end.\n\n<strong>2.Model的关系定义.</strong>\n在Model里,可以定义该Model和其它model的关系,比如说,belongs_to和has_many等.在Model加入relations()方法或者修改西安曾的relations()方法,下面给出一个例子:\n<pre lang="PHP">\n<?php\npublic function relations() {\n return array(\n ''topicCount'' => array(self::STAT, ''TClubTopic'', ''_club''),\n ''creator''=>array(self::BELONGS_TO, ''TUser'', ''_creator''),\n ''topics'' => array(self::HAS_MANY, ''TClubTopic'', ''_club''),\n );\n}\n?>\n</pre>\ntopicCount和creator定义的是返回对象的别名.\nself::STAT定义的是关联表的记录数,相当于一个count.self::BELONGS_TO定义的是1对1的关系,比如说,日志跟用户的关系,一个日志对应一个用户.self::HAS_MANY定义的是多对多的关系,一个用户可能有很多的日志,他跟日志的关系就是多对多了.\nTClubTopic和TUser是关联的Model名字,_club和_creator关联Model的外键.\n\n<strong>3.指定Model链接的表名.</strong>\n有时需要让Model指向的表名和Model的名字不一样,可以定义以下的一个方法:\n<pre lang="PHP">\npublic function tableName() {\n return ''foo_bar'';\n}\n</pre>', 1, '2009-03-25 17:12:08', '2009-03-25 17:12:08', 0, 0, 'yYii拾遗(陆续添加中)'),
( 'U盘安装ArchLinux-200902-x86_64', 'ArchLinux的200902版放出来有一段时间了，最近决定升级系统为64位的，并且可以尝试下EXT4的文件系统。由于没有刻录机，ArchLinux对硬盘安装的支持又不好～所以决定用U盘来安装。\n\n<strong>准备工作：</strong>\n下载archlinux-200902-core-x86_64.img,并在linux用dd将镜像写入U盘，命令为：\ndd if=/path/to/archlinux-200902-core-x86_64.img of=/dev/sdb\n一般U盘的位置为/dev/sdb，如果以上命令有错误的话，建议查看下U盘的位置并修改上面的命令。\n\n<strong>引导计算机：</strong>\n修改CMOS的设置，将USB－ZIP的启动放在硬盘的前面，并修改硬盘的启动顺序，将U盘放在本机硬盘的前面，然后重启计算机即可。\n<!--more-->\n<strong>安装Arch：</strong>\n由于机器本身已经有linux分区，所以不需要对硬盘进行分区，只需要选择挂载点即可，由于200902支持ext4，这里的分区类型当然要选择ext4了。设置结束后，进行包选择。本机使用的是无线上网，所以在base的基础上，还要选择相应的无线网卡模块和iwconfig包以确保无线的使用，本人使用的无线模块是rt71w。其它的设置和之前的arch没有什么区别了，locale的选择上，en只需要选择utf-8即可，中文需要选择gdk,utf-8和gb2312，GB10830没有特殊需求的话，就不用选择了。安装完成后重新启动计算机即可进入base system了。\n\n<strong>升级系统：</strong>\nArch的更新非常快 ，所以安装完系统以后需要进行一次升级。先使用pacman -Sy跟源进行同步，然后使用pacman -Suv进行升级。\n\n<strong>安装桌面系统：</strong>\n装桌面前，我们需要创建一个自己的用户。很多人喜欢开着root跑，但是我不推荐这样做，使用自己的帐户可以避免自己的误操作给系统带来麻烦。建立新用户并设置用户的密码，命令为：\nuseradd -m -s /bin/bash <em>username</em>\npasswd <em>username</em>\n上面的username为要设置的用户名。gnome桌面默认是不允许以root登录的，所以切记要在桌面装好前建立自己的用户。\n要装桌面首先要装xorg,这是所有桌面系统的基础，命令为:\npacman -S xorg hwd\n装好xorg后使用hwd -x生成xorg.conf配置文件，这个命令会生成xorg.conf.vesa文件，将这个文件改名为xorg.cong即可。\n接下来就是gnome的安装了，命令为：\npacman -S gnome gdm gnome-terminal\ngdm是gnome使用的登录器，gnome-terminal是gnome下的一个终端模拟器。\nxorg加上gnome，大概有270M，网速150K的话，大概需要将近1个小时的时间，我就打了一个小时的街霸，嘿嘿。\n安装完成后，使用pacman -S nvidia-173xx来安装显卡的驱动，本人所用的是nvidia 9600GSO的显卡，ATI显卡驱动的安装请查阅archlinux的wiki。装好驱动后，修改xorg.conf，将里面的Load "type1"去掉，然后将Driver里的vesa改成nvidia，保存退出即可。修改/etc/inittab文件，将boot to console里的3改成5，意思是系统启动后引导到Xorg，再将xdm的这一行注释掉，将gdm这一行的注释去掉，意思是使用gdm作为登录管理器。最后使用reboot重新启动计算机，就会看到熟悉的gnome登录界面了。', 1, '2009-03-27 22:21:10', '2009-03-27 22:21:10', 0, 0, 'U盘安装ArchLinux-200902-x86_64'),
( 'Archlinux系统配置和优化', 'Arch默认的配置非常简单，我们需要修改和优化它，以使它可以更好的供我们使用。\n下面的所有配置都是建立在gnome桌面系统上，所有的命令都是以root身份执行的，如果不想用root登录，可以在命令前加sudo。\n\n<strong>一、字体的优化</strong>\nArch自带的字体非常的难看，中文字体更是难看之极，所以我们需要安装一些好看的字体来美化我们的系统。使用下面的命令安装所有需要的字体：\npacman -S ttf-arphic-uming ttf-arphic-ukai wqy-zenhei wqy-bitmapfont ttf-dejavu ms-fonts\n安装完成后，需要修改/etc/fonts/conf.d/44-wqy-zenhei.conf以打开embeddedbitmap, 将里面name="embeddedbitmap"的值false改成true。\n<!--more-->\n<strong>二、桌面的美化</strong>\nArch自带的主题比较少～我们可以自行安装一些其它主题以我们的系统更加美观。使用下面的命令安装主题：\npacman -S gtk-engine-murrine gtk2-themes-collection gtk-aurora-engine gtk-candido-engine gtk-rezlooks-engine\n安装完成即可以在外观里选择喜欢的主题了。\n\n<strong>三、安装网络管理器</strong>\nArch本身并不带网络管理器，只是使用系统配置来登录网络，如果只用的是无线网络的话，每次都手动连接网络的话，非常的麻烦，这个时候，就需要安装网络管理器了。使用下面的命令来安装网络管理器：\npacman -S gnome-network-manager\n安装完成后，修改/etc/rc.conf文件，将里面的INTERFACES里装载的模块都点掉，只留下lo，改成以下的样子，INTERFACES=(lo !eth0 !ath0)。然后禁掉系统本身的network选项，并开启hal，dhcdbd和networkmanager3个进程，将DAEMONS里的东西改成以下这样：DAEMONS=( ... !network hal dhcdbd networkmanager networkmanager-dispatcher ... )。修改完成后，我们要继续修改/etc/pam.d/gdm文件，以确保netwokrmanager可以顺利修改机器的网络配置，确保这个文件里有以下2行：\nauth optional pam_gnome_keyring.so\nsession optional pam_gnome_keyring.so auto_start\n然后修改/etc/pam.d/passwd文件，加入这行：\npassword optional pam_gnome_keyring.so\n这一步做完后，将自己加入network这个用户组里，命令为gpasswd -a <em>USERNAME</em> network。完成后启动计算机即可。\n\n<strong>四、安装声卡</strong>\nArch的内核已经带有声卡的驱动，我们需要用以下的命令来安装声卡必须的库，命令为：\npacman -S alsa-lib alsa-utils alsa-oss\n安装完成后，需要修改/etc/modprobe.conf以确保最后读取snd_pcsp模块，在该文件里加入如下内容：\noptions snd-pcsp index=2\n完成后使用gpasswd -a <em>USERNAME</em> audio将自己加入audio用户组。重新启动计算机即可生效。\n\n<strong>五、配置HAL自动挂载</strong>\nLinux以前的挂载都是用mount命令，虽然非常的简单，但是如果经常要用别的分区的话，也是很麻烦的事情。所以我们需要配置HAL以实现自动挂载分区和移动硬盘。首先使用下面的命令以确保你没有漏安装包：\npacman -S hal dbus pmount ntfs-3g\n然后修改/etc/rc.conf文件，在DAEMONS里加入hal，例如DAEMONS=(syslog-ng hal network ...)。然后使用如下命令将自己加入到用户组里：\ngpasswd -a <em>USERNAME</em> optical\ngpasswd -a <em>USERNAME</em> storage\n接下来创建/etc/hal/fdi/policy/20-ntfs-config-write-policy.fdi文件，在里面写上如下的内容：\n<pre lang="XML">\n<?xml version="1.0" encoding="UTF-8"?>\n<deviceinfo version="0.2">\n <device>\n <match key="volume.fstype" string="ntfs">\n <match key="@block.storage_device:storage.hotpluggable" bool="true">\n <merge key="volume.fstype" type="string">ntfs-3g</merge>\n <merge key="volume.policy.mount_filesystem" type="string">ntfs-3g</merge>\n <append key="volume.mount.valid_options" type="strlist">locale=</append>\n </match>\n </match>\n </device>\n</deviceinfo>\n</pre>\n接着修改/etc/PolicyKit/PolicyKit.conf，以改变挂载的权限，在里面加入如下内容：\n<pre lang="XML">\n <match user="USERNAME"> <!-- replace with your login or delete the line if you want to allow all users to manipulate devices (keep security issues in mind though) -->\n <match action="org.freedesktop.hal.storage.*">\n <return result="yes"/>\n </match>\n <match action="hal-storage-mount-fixed-extra-options"> <!-- for internal devices mounted with extra options like a wished mount point -->\n <return result="yes" />\n </match>\n <match action="hal-storage-mount-removable-extra-options"> <!-- for external devices mounted with extra options like a wished mount point -->\n <return result="yes" />\n </match>\n </match> <!-- don''t forget to delete this line if you deleted the first one -->\n</pre>\n将里面的USERNAME改成你的用户名即可。重新启动X使配置失效。\n\n<strong>六、安装mplayer</strong>\nLinux上比较好用的播放器就是mplayer了，Arch自然可以很轻松的安装和使用mplayer了，使用下面的命令安装mplayer，支持的编码和插件：\npacman -S mplayer codecs mplayer-plugin\n\n<strong>七、安装必要的软件</strong>\nArch本身带的软件比较少，我们需要安装一些必要的软件以方便日常的使用，首先要安装的就是file-roller，这是对文件进行相应操作的工具，比如说，对文件进行压缩和解压缩，当然，使用它正确操作文件的话，需要安装相应的压缩和解压程序，安装命令为：\npacman -S file-roller unrar zip unzip', 1, '2009-03-27 22:48:21', '2009-03-27 22:48:21', 0, 0, 'Archlinux系统配置和优化'),
( 'Arch使用Fcitx输入法', '之前一直使用的是SCIM的输入法,虽然有些别扭,但是也没有动过更换输入法的念头.最近受朋友鼓动,去尝试了下Fcitx,感觉还不错,附上安装和配置的过程.\n首先使用sudo pacman -S fcitx安装输入法,然后修改~/.bashrc文件,加入如下内容:\nexport GTK_IM_MODULE=xim\nexport QT_IM_MODULE=xim\nexport XMODIFIERS="@im=fcitx"\n保存后重新登录.\n这时我们就可以使用fcitx &来启动输入法,希望以后每次登录自动启动输入法,可以将这句命令加入到会话中.\n由于我们平常用的输入法都是使用,.来切换选词,所以我们可以修改~/.fcitx/conf/的文件来改变Fcitx切换选择的快捷键.', 1, '2009-03-30 20:04:14', '2009-03-30 20:04:14', 0, 0, 'arch%e4%bd%bf%e7%94%a8fcitx%e8%be%93%e5%85%a5%e6%b3%95'),
( 'Arch配置Apache+Mysql+PHP', 'Arch上配置Apache+Mysql+PHP还是有些麻烦的,它跟其它的发行版有些许不同,下面我们就来一点一点的配置它们.\n\n<strong>安装Apache+Mysql+PHP</strong>\n使用命令pacman -S apache mysql php来安装3个软件.\n\n<strong>配置Apache:</strong>\nApache的主要配置文件是/etc/httpd/conf/httpd.conf,我们在里面要去掉一些不使用的模块,以使apache跑的更轻松,以下模块都是可以不用的:\nauthnz_ldap_module, ldap_module, unique_id_module, proxy_module, proxy_connect_module, proxy_ftp_module, proxy_http_module, proxy_ajp_module, proxy_balancer_module, ssl_module, dav_module, cgi_module, cgid_module, dav_fs_module\n修改DocumentRoot和&lt;Directory "/var/http"&gt;, 将里面的路径改成你的web根目录, 再去掉关于ssl和cgi的配置信息,并将Include conf/extra/httpd-userdir.conf行注释掉.在文件的最末尾加入如下2行使Apache启动时加载PHP5:\nLoadModule php5_module modules/libphp5.so\nInclude conf/extra/php5_module.conf\n最后,将http这个用户加入你的组,命令为gpasswd -a http <em>USERNAME</em>\n启动apache的命令为sudo /etc/rc.d/httpd start.\n\n<!--more-->\n<strong>配置Mysql</strong>\nMysql的配置相对比较简单,使用sudo /etc/rc.d/mysqld start启动Mysql, 然后使用mysqladmin -u <strong>root</strong> -p password <em>root</em>来设置密码,注意,黑体的位置输入你要设置的用户名,斜体的是该用户名的密码,第一次使用这个命令会提示你输入root的密码,由于我们还没有密码,所以直接按回车即可.\n\n<strong>配置PHP</strong>\nPHP的配置比Apache要简单一些.第一步需要修改//etc/php/php.ini里面的open_basedir变量,确保里面有你的web根目录的路径.第二步修改加载的库,按照需要选择自己要用的库即可.\n\n上述的所有配置均是以开发为目的的配置,如果需要做服务器使用的话,请修改相应的配置,并增加安全配置.\n\nP.S.\n将httpd和mysqld加入rc.conf文件可以使apache和mysql随系统一起启动,例如:\nDAEMONS=(... httpd mysqld ...)', 1, '2009-03-30 20:53:29', '2009-03-30 20:53:29', 0, 0, 'arch%e9%85%8d%e7%bd%aeapachemysqlphp'),
( '使用PDO尝试自己写一个数据库类(放出0.1版)', '长久以来, 一直是使用框架的数据库类来操作数据库,很少自己来写这个东西.最近看到pdo,发现这个东西用来写数据库的类很合适,于是打算尝试下自己写一个数据库的类,不知道能写到什么程度,呵呵\n\n这个类要用完全面向对象的方法来操作数据,每一条记录就是一个对象,记录中的每一个字段,就是对象的一个属性.对象拥有保存,更改和删除的方法.\n\n如果能写出来,就叫0.1版本吧,呵呵.希望能够借此多多熟悉php的面向对象特性.\n\n代码还没有完全写完,先贴出来部分.\n<!--more-->\n<pre lang="PHP">\n<?php\n/**\n * =========================================\n * ======== ShiehDB ver 0.1 alpha =========\n * =========================================\n *\n * Created by David Shieh at 2009-04-15\n *\n * E-mail : mykingheaven@gmail.com\n * Gtalk : mykingheaven@gmail.com\n * QQ : 55832168\n *\n * 如果大家对本程序有任何的建议和修改意见,\n * 欢迎大家与我探讨,\n * 希望这个类可以使大家的数据库操作更加的方便\n *\n * 此类既可以直接使用,也可以继承使用\n *\n */\nclass ShiehDB {\n\n //要操作的表名\n public $_tableName = null;\n\n //最终执行的sql语句\n private $_sql = '''';\n\n /**\n * 构造函数,连接数据库\n * @param string $host\n * @param string $dbname\n * @param string $username\n * @param string $password\n */\n public function __construct($host, $dbname, $username, $password) {\n try {\n $this->_db = new PDO(''mysql:dbname=''.$dbname.'';host=''.$host, $username, $password);\n } catch (PDOException $e) {\n die($e->getMessage());\n }\n }\n\n /**\n * 查询数据\n * @return array\n */\n public function find() {\n if (!$this->_tableName)\n return $this->errorCode(''201'');\n $this->_sql = ''SELECT '';\n\n //要获取的字段\n if (isset($this->fields))\n $this->getFields();\n else\n $this->_sql = $this->_sql.''* '';\n\n //生成sql语句\n $this->_sql = $this->_sql.''FROM ''.$this->_tableName;\n\n //查询的条件\n if (isset($this->conditions))\n $this->getConditions();\n\n //返回sql语句ѯ\n return $this->_sql;\n }\n\n /**\n * 更新数据\n * @return\n */\n public function save() {\n //判断有无ID,有则做update操作,无则做insert操作\n if (isset($this->id)) {\n echo ''1'';\n } else {\n $this->_sql = ''INSERT INTO ''.$this->_tableName." ";\n\n $array = get_object_vars($this);\n $keys = array();\n $values = array();\n foreach ($array as $key => $value) {\n if ($key[0] !== ''_'') {\n $keys[] = ''`''.$key.''`'';\n $values[] = $value;\n }\n }\n\n $keys = implode('','', $keys);\n $values = implode('','', $values);\n\n $this->_sql = $this->_sql."(".$keys.'') VALUES (''.$values.'')'';\n return $this->_sql;\n }\n }\n\n /**\n * 执行自定义sql语句\n * @return array\n * @param string $sql\n */\n public function query($sql) {\n if (!empty($sql)) {\n $stmt = $this->_db->prepare($sql);\n $stmt->execute();\n $num = $stmt->columnCount();\n $result = array();\n for ($i = 1;$i < $num;$i++) {\n $result[] = $stmt->fetchObject();\n }\n return $result;\n }\n }\n\n /**\n * 查询错误信息代码\n * @return\n * @param string $code\n */\n private function errorCode($code) {\n $codes = array(\n ''201'' => ''No table used.''\n );\n return $codes[$code];\n }\n\n /**\n * 处理查询的条件\n * @return\n */\n private function getConditions() {\n if (isset($this->conditions)) {\n $result = '''';\n $keys = array_keys($this->conditions);\n $num = count($keys);\n\n for ($i = 0;$i < $num;$i++) {\n if ($i !== ($num -1) ) {\n $result = $result."`".$keys[$i]."` = ".$this->conditions[$keys[$i]]." AND ";\n }\n else $result = $result."`".$keys[$i]."` = ".$this->conditions[$keys[$i]];\n }\n\n $this->_sql = $this->_sql." WHERE ".$result;\n unset($this->conditions);\n }\n\n }\n\n /**\n * 处理读取的字段\n * @return\n */\n private function getFields() {\n if (isset($this->fields)) {\n $temp = implode('','', $this->fields);\n $this->_sql = $this->_sql.$temp." ";\n unset($this->fields);\n }\n }\n\n /**\n * 处理排序\n * @return\n */\n private function getOrders() {\n\n }\n}\n?>\n</pre>\n\n使用方法:\n1.直接使用该类:\n<pre lang="PHP">\n<?php\ninclude(''shiehdb.php'');\n$db = new ShiehDB(''localhost'', ''test'', ''root'', ''root'');\n$db->_tableName = ''tableName'';\n$db->conditions = array(''username'' => ''user'');\n$user = $db->find();\n?>\n</pre>\n\n2.继承该类:\n<pre lang="PHP">\n<?php\ninclude(''shiehdb.php'');\nclass User extends ShiehDB {\n public function __construct() {\n parent::__construct(''localhost'', ''test'', ''root'', ''root'');\n $this->_tableName = ''user'';\n }\n}\n\n$user = new User();\n$user->conditions = array(''id'' => 1);\necho $user->find();\n?>\n</pre>', 1, '2009-03-31 15:42:16', '2009-03-31 15:42:16', 0, 0, '%e4%bd%bf%e7%94%a8pdo%e5%b0%9d%e8%af%95%e8%87%aa%e5%b7%b1%e5%86%99%e4%b8%80%e4%b8%aa%e6%95%b0%e6%8d%ae%e5%ba%93%e7%b1%bb%e6%ad%a3%e5%9c%a8%e5%bc%80%e5%8f%91%e4%b8%ad'),
( 'Linux下的取色器', '最近需要做HTML~需要一个取色器~一直以来Linux底下都没有什么好的取色器软件~\n偶然间发现Gcolor2~还不错~是个Gnome下的取色软件~试用过后~觉得很是好用~再也不需要Gimp取色了~\n安装命令为:\npacman -S gcolor2', 1, '2009-04-03 00:10:46', '2009-04-03 00:10:46', 0, 0, 'linux%e4%b8%8b%e7%9a%84%e5%8f%96%e8%89%b2%e5%99%a8'),
( 'Yii请求处理流程分析', '近日对Yii的请求处理有些疑惑~所以便开始了对Yii的源码的研究.\n[caption id="attachment_100" align="alignnone" width="420" caption="Yii请求处理流程图"]<img src="http://davidshieh.cn/wp-content/uploads/2009/04/flow.png" alt="Yii请求处理流程图" title="flow" width="420" height="520" class="size-full wp-image-100" />[/caption]\n这是官方的一副流程图.\n打开源码~开始了请求的追踪.\n<!--more-->\n当一次请求被处理的时候~程序先调用了project/index.php文件,里面有如下几行代码:\n<pre lang="PHP">\n// change the following paths if necessary\n$yii=dirname(__FILE__).''/../yii/framework/yii.php'';\n$config=dirname(__FILE__).''/protected/config/main.php'';\n\n// remove the following line when in production mode\ndefined(''YII_DEBUG'') or define(''YII_DEBUG'',true);\n\nrequire_once($yii);\nYii::createWebApplication($config)-&gt;run();\n</pre>\n这段代码首先讲yii.php文件和main.php文件放入2个变量中,然后设置了YII_DEBUG变量为true,接着require_once了yii.php文件,并调用了run()方法.\n\nyii.php文件有如下代码:\n<pre lang="PHP">\nrequire(dirname(__FILE__).''/YiiBase.php'');\nclass Yii extends YiiBase\n{\n}\n</pre>\n这段代码导入了yiibase.php,并定义了类Yii,该类继承YiiBase.\n\nmain.php里面是各种配置的信息,将配置信息作为数组返回.\nYii继承YiiBase,于是又找到YiiBase.php文件,发现这个文件开始的时候定义了如下几个变量:YII_BEGIN_TIME,YII_DEBUG,YII_ENABLE_EXCEPTION_HANDLER,YII_ENABLE_ERROR_HANDLER和YII_BATH.\n找到createWebApplication方法,里面就一条语句:\n<pre lang="PHP">\nreturn new CWebApplication($config);\n</pre>\n于是又找到yii/framework/web/CWebApplication.php文件,但是却没有在里面找到构造函数,由于该类继承CApplication,又找到yii/framework/base/CApplication.php,这个类里有构造函数,内容如下:\n<pre lang="PHP">\npublic function __construct($config=null)\n{\n Yii::setApplication($this);\n\n // set basePath at early as possible to avoid trouble\n if(is_string($config))\n $config=require($config);\n if(isset($config[''basePath'']))\n {\n $this->setBasePath($config[''basePath'']);\n unset($config[''basePath'']);\n }\n else\n $this->setBasePath(''protected'');\n Yii::setPathOfAlias(''application'',$this->getBasePath());\n Yii::setPathOfAlias(''webroot'',dirname($_SERVER[''SCRIPT_FILENAME'']));\n\n $this->preinit();\n\n $this->initSystemHandlers();\n $this->registerCoreComponents();\n\n $this->configure($config);\n $this->attachBehaviors($this->behaviors);\n $this->preloadComponents();\n\n $this->init();\n}\n</pre>\n第一句Yii::setApplication($app);调用YiiBase里的setApplication()方法,该方法内容如下:\n<pre lang="PHP">\npublic static function setApplication($app)\n{\n if(self::$_app===null || $app===null)\n self::$_app=$app;\n else\n throw new CException(Yii::t(''yii'',''Yii application can only be created once.''));\n}\n</pre>\n这个方法的目的是实例化一个app对象.\n第6行到第14行设定了config和basePath.第15句和第16句设定了2个路径的快捷方式, webroot和application.\n第18行调用了preinit()方法,该方法在该类中没有,是该类的父类CModule里的,但是找到yii/framework/base/CModule.php后,发现该方法内容为空.\n第20行调用了initSystemHandlers,该方法位于该类中,内容如下:\n<pre lang="PHP">\nprotected function initSystemHandlers()\n{\n if(YII_ENABLE_EXCEPTION_HANDLER)\n set_exception_handler(array($this,''handleException''));\n if(YII_ENABLE_ERROR_HANDLER)\n set_error_handler(array($this,''handleError''),error_reporting());\n}\n</pre>\n第21行调用了registerCoreComponents方法,该方法内容如下:\n<pre lang="PHP">\nprotected function registerCoreComponents()\n{\n $components=array(\n ''coreMessages''=>array(\n ''class''=>''CPhpMessageSource'',\n ''language''=>''en_us'',\n ''basePath''=>YII_PATH.DIRECTORY_SEPARATOR.''messages'',\n ),\n ''db''=>array(\n ''class''=>''CDbConnection'',\n ),\n ''messages''=>array(\n ''class''=>''CPhpMessageSource'',\n ),\n ''errorHandler''=>array(\n ''class''=>''CErrorHandler'',\n ),\n ''securityManager''=>array(\n ''class''=>''CSecurityManager'',\n ),\n ''statePersister''=>array(\n ''class''=>''CStatePersister'',\n ),\n );\n\n $this->setComponents($components);\n}\n</pre>\n第23行调用了configure方法,该方法在父类CModule里,内容如下:\n<pre lang="PHP">\npublic function configure($config)\n{\n if(is_array($config))\n {\n foreach($config as $key=>$value)\n $this->$key=$value;\n }\n}\n</pre>\n第24行调用了attachBehaviors方法,该方法位于父类CModule的父类CComponent类中,内容如下:\n<pre lang="PHP">\npublic function attachBehaviors($behaviors)\n{\n foreach($behaviors as $name=>$behavior)\n $this->attachBehavior($name,$behavior);\n}\n</pre>\n第25行调用了preloadComponents方法,该方法同样位于父类CModule里,内容如下:\n<pre lang="PHP">\nprotected function preloadComponents()\n{\n foreach($this->preload as $id)\n $this->getComponent($id);\n}\n</pre>\n第27行调用了init方法,该方法位于父类CModule方法中,内容为空.\n至此Yii::createWebApplication($config)方法已经分析完成~剩下的就是run()方法了.', 1, '2009-04-20 00:04:48', '2009-04-20 00:04:48', 0, 0, 'yii-workflow'),
( '使用Yii开发简单新闻系统之一--建立项目', '前端时间一直想一个适合新手入门的Yii实例, 一直没有完成, 这个周末有些时间, 把这个教程完成.\n\n首先我们来分析下项目需求:\n这个新闻系统, 所有用户可以查新新闻, 但只有注册用户才可以评论新闻.用户可以随便注册成为注册用户.\n建表的sql语句如下:\n<pre lang="SQL">\nSET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";\n\n--\n-- 数据库: `shiehnews`\n--\n\n-- --------------------------------------------------------\n\n--\n-- 表的结构 `articles`\n--\n\nCREATE TABLE IF NOT EXISTS `articles` (\n `id` int(11) NOT NULL auto_increment,\n `userId` int(11) NOT NULL,\n `categoryId` int(11) NOT NULL,\n `title` varchar(255) NOT NULL,\n `createdTime` int(11) NOT NULL,\n `modifiedTime` int(11) NOT NULL,\n `content` text NOT NULL,\n `viewNum` int(11) NOT NULL default ''0'',\n `commentNum` int(11) NOT NULL default ''0'',\n PRIMARY KEY (`id`),\n KEY `fk_articles_users` (`userId`),\n KEY `fk_articles_categories` (`categoryId`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;\n\n-- --------------------------------------------------------\n\n--\n-- 表的结构 `categories`\n--\n\nCREATE TABLE IF NOT EXISTS `categories` (\n `id` int(11) NOT NULL auto_increment,\n `name` varchar(255) NOT NULL,\n PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;\n\n-- --------------------------------------------------------\n\n--\n-- 表的结构 `comments`\n--\n\nCREATE TABLE IF NOT EXISTS `comments` (\n `id` int(11) NOT NULL auto_increment,\n `userId` int(11) NOT NULL,\n `articleId` int(11) NOT NULL,\n `comment` text NOT NULL,\n `createdTime` int(11) NOT NULL,\n `modifiedTime` int(11) NOT NULL,\n PRIMARY KEY (`id`),\n KEY `fk_comments_articles` (`articleId`),\n KEY `fk_comments_users` (`userId`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;\n\n-- --------------------------------------------------------\n\n--\n-- 表的结构 `users`\n--\n\nCREATE TABLE IF NOT EXISTS `users` (\n `id` int(11) NOT NULL auto_increment,\n `username` varchar(45) NOT NULL,\n `password` varchar(45) NOT NULL,\n `articleNum` int(11) NOT NULL default ''0'',\n `commentNum` int(11) NOT NULL default ''0'',\n `email` varchar(50) NOT NULL,\n `nickname` varchar(50) default NULL,\n `createdTime` int(11) NOT NULL,\n PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;\n</pre>\n\n下载Yii框架, 我使用的是SVN版的, 大家可以下载1.0.7的.将Yii框架放到D:yii下,在D盘根目录下执行\nyiiframeworkyiic.bat webapp shiehnews-yii\n建立项目, 然后进入项目, 修改protectedconfigmain.php, 修改里面name值,改成ShiehNews, 接着修改db值\n将db值修改为:\n<pre lang="PHP">\n''db'' => array(\n ''class'' => ''CDbConnection'',\n ''connectionString'' => ''mysql:host=localhost;dbname=shiehnews'',\n ''username'' => ''root'',\n ''password'' => ''root'',\n ''charset'' => ''utf8'',\n),\n</pre>\ndbname改成数据库的名称,username和password改成自己数据库的用户名和密码.保存即可.\n回到命令行, 进入shiehnews-yii目录, 执行\nprotectedyiic.bat shell\n运行代码生成器, 使用model &lt;ModelName&gt;来建立4个model, 对应我们建的4张表, 这里给4个model启的名字分别为Article, Category, Comment, User, 建好后, 使用crud Article和crud User来建立脚手架. 完成后, 输入exit退出.\n\n至此, 我们已经建立了需要的数据库, 也创建了项目目录, 同时也有了4个model和2个controller, 下一节开始, 我们一起来增加注册, 登录和注销的功能.', 1, '2009-04-21 16:09:30', '2009-04-21 16:09:30', 0, 0, 'yii-article-system-tuturial-one'),
( '使用Yii开发简单文章系统之二--用户操作', '上一节我们使用Yii的工具创建了项目, 并创建了我们会用到的model代码和controller代码, 从本节开始, 我们将不断的接触MVC, 不断的完善我们的系统.\n\n打开protectedmodelsUser.php文件, 修改我们的User Model.\n首先修改Model指向的表名, 将tableName()里面return的内容改成users, 如下:\n<pre lang="PHP">\npublic function tableName() {\n return ''users'';\n}\n</pre>\n<!--more-->\n\n用户注册的时候, 我们需要用户来输入他喜欢的密码, 需要一个密码确认的字段, 为了防止机器人程序恶意注册, 我们还需要一个验证码字段, 所以要在User这个类里加入2个属性: passwordConfirm和verifyCode, 代码如下:\n<pre lang="PHP">\n public $passwordConfirm;\n public $verifyCode;\n</pre>\n\n下面我们来添加User的字段验证规则.根据我们的需求, username, password, passwordConfirm, email和verifyCode都是必填项, 所以需要添加如下的规则:\narray(''username, password, passwordConfirm, email, verifyCode'', ''required'')\n另外, 我们希望用户名和nickname唯一, 就需要添加以下的规则:\narray(''username'', ''unique''),\narray(''nickname'', ''unique'')\n注册的时候, 用户需要输入两遍密码以确保没有把密码输错, 这里就需要passwordConfirm字段的值等于password了, 可以使用以下的规则:\narray(''passwordConfirm'', ''compare'', ''compareAttribute'' => ''password'')\n这个规则的意思是, passwordConfirm的值必须与password相同.\n这样, 我们完成好的验证规则就应该像下面的代码:\n<pre lang="PHP">\n public function rules() {\n return array(\n array(''username, password, passwordConfirm, email, verifyCode'', ''required''),\n array(''username'', ''unique''),\n array(''username'', ''length'', ''min'' => 5, ''max'' => 12),\n array(''password'', ''length'', ''min'' => 5, ''max'' => 12),\n array(''nickname'', ''length'', ''min'' => 4, ''max'' => 20),\n array(''nickname'', ''unique''),\n array(''verifyCode'', ''captcha''),\n array(''passwordConfirm'', ''compare'', ''compareAttribute'' => ''password''),\n );\n }\n</pre>\n\nYii的model里有个特殊的地方就是, 它可以保护字段的安全性, 所有放在safeAttributes()方法里的字段被认为是可以访问和修改的, 不在里面的字段则是需要保护的, 所以我们需要将我们刚才的字段都放进这个方法里, 如下:\n<pre lang="PHP">\n public function attributeLabels() {\n return array(\n ''username'' => ''用户名'',\n ''password'' => ''密码'',\n ''passwordConfirm'' => ''密码确认'',\n ''email'' => ''邮件地址'',\n ''nickname'' => ''昵称'',\n ''verifyCode'' => ''验证码''\n );\n }\n</pre>\n\n好了, 现在我们已经有了一个完善的字段验证规则, 又确保了我们的字段是可以访问的, 现在该修改controller文件了. 打开protected/controllers/UserController.php文件, 创建一个新的方法register, 根据yii的规则, 所有允许用户访问的的action方法必须以action开头, 所以我们创建的方法名字应该是actionRegister()了.\n\n书写该方法的方法体, 首先我们需要创建一个form, 这个form是一个Model的实例, 因为我们的目的是注册一个用户, 所以这个form需要是User的实例, 用以下代码:\n$form = new User;\n这个form建好后, 没有任何属性, 但是已经可以使用了, 我们需要将它传到view里去显示它, 以便让用户填写自己的信息, 使用代码:\n$this->render(''register'', array(''form'' => $form));\n将$form传到register试图并命名为form.\n\n在protected/views/user目录下创建register.php文件, 内容如下:\n<pre lang="PHP">\n<h2>新用户注册</h2>\n\n<?php echo CHtml::beginForm(); ?>\n\n<?php echo CHtml::errorSummary($form); ?>\n\n<p>\n <?php echo CHtml::activeLabelEx($form, ''username''); ?>\n <?php echo CHtml::activeTextField($form, ''username'', array(''size'' => 20, ''maxlength'' => 12)); ?>\n</p>\n<p>\n <?php echo CHtml::activeLabelEx($form, ''password''); ?>\n <?php echo CHtml::activePasswordField($form, ''password'', array(''size'' => 20, ''maxlength'' => 12)); ?>\n</p>\n<p>\n <?php echo CHtml::activeLabelEx($form, ''passwordConfirm''); ?>\n <?php echo CHtml::activePasswordField($form, ''passwordConfirm'', array(''size'' => 20, ''maxlength'' => 12)); ?>\n</p>\n<p>\n <?php echo CHtml::activeLabelEx($form, ''email''); ?>\n <?php echo CHtml::activeTextField($form, ''email'', array(''size'' => 20)); ?>\n</p>\n<p>\n <?php echo CHtml::activeLabelEx($form, ''nickname''); ?>\n <?php echo CHtml::activeTextField($form, ''nickname'', array(''size'' => 20, ''maxlength'' => 12)); ?>\n</p>\n\n<p>\n <label>&nbsp;</label>\n <?php $this->widget(''CCaptcha''); ?>\n</p>\n\n<p>\n <?php echo CHtml::activeLabelEx($form, ''verifyCode''); ?>\n <?php echo CHtml::activeTextField($form, ''verifyCode''); ?>\n</p>\n\n<p>\n <label>&nbsp;</label>\n <?php echo CHtml::submitButton(''注册''); ?>\n</p>\n\n<?php echo CHtml::endForm(); ?>\n</pre>\n里面调用了Yii提供的方法来创建我们需要的HTML标签, 有一个需要注意的地方就是里面使用$this->widget(''CCaptcha'');\n来显示一个验证码, 用它的时候, 我们需要在controller里声明它, 声明的方法如下:\n<pre lang="PHP">\n public function actions() {\n return array(\n ''captcha''=>array(\n ''class'' => ''CCaptchaAction'',\n ''backColor'' => 0xCCCCCC,\n ''testLimit'' => 1,\n ),\n );\n }\n</pre>\n这样,我们就可以在view里使用验证码了, 怎么样, 赶紧去试试吧, 访问url:\nhttp://localhost/index.php?r=user/register\n怎么?显示你没有权限访问该action, 嘿嘿, 这就对了, 在Yii的世界里, 任何一个action在被访问的时候, 都会检查它的权限的, 我们只需要到controller里找到accessRules()方法, 在''user'' => array(''*'')的这个array里, 将我们的action加进入, 就可以顺利访问了, 比如说:\n<pre lang="PHP">\n array(''allow'', // allow all users to perform ''list'' and ''show'' actions\n ''actions'' => array(''register'', ''login'', ''logout'', ''captcha''),\n ''users'' => array(''*''),\n ),\n</pre>\n注意, 要在view里显示captcha, 也必须把captcha action加进去.\n回到浏览器重新刷新一下, 怎么样, 我们的表单出来了吧.', 1, '2009-04-21 16:24:53', '2009-04-21 16:24:53', 0, 0, 'yii-article-system-tutorial-2'),
( 'ShiehNews 源码下载', '最近正在找工作~有些许忙碌~前面写的教程一直没有及时更新~这里放出ShiehNews的源码~感兴趣的朋友可以下来研究~我找到工作后~会把教程补齐的~\n<a href="http://davidshieh.cn/wp-content/uploads/2009/04/shiehnews-yii.rar">点击下载源码</a>', 1, '2009-04-24 00:21:56', '2009-04-24 00:21:56', 0, 0, 'shiehnews-%e6%ba%90%e7%a0%81%e4%b8%8b%e8%bd%bd'),
( '优秀的数据库设计软件--MySQL Workbench', '之前一直在寻找一款优秀的数据库设计软件,尝试了很多,都没有太中意的~\r\n不经意间发现了MySQL Workbench, 由于是MySQL官方出的数据库软件,所以没有理由不试用一下.\r\n\r\n软件不大, 大概有11M的样子, 安装时提示需要.Net Framework 2.0, 这是唯一让我不爽的地方. 为了使用它, 只好委屈下自己了.\r\n<!--more-->\r\n运行后, 发现界面非常的清爽, 如图:\r\n[caption id="attachment_120" align="aligncenter" width="300" caption="MySQL Workbench 界面"]<img src="http://davidshieh.cn/wp-content/uploads/2009/04/mysql-workbench-300x224.png" alt="MySQL Workbench 界面" title="mysql-workbench" width="300" height="224" class="size-medium wp-image-120" />[/caption]\r\n\r\n双击上面的"Add Diagram"创建模型图表, 在图表试图里, 左边有一系列的按钮, 上数第7个按钮是创建Table的按钮, 使用它来创建我们需要的表格, 具体过程不描述了, very easy的.\r\n下面还有几个按钮是创建关联的. 如果要关联的字段已经写在表里了, 直接在表的信息栏里可以找到Foreign Keys这个标签.\r\n\r\n下面是我为ShiehNews创建的关系图:\r\n[caption id="attachment_121" align="aligncenter" width="300" caption="ShiehNews 关系图"]<img src="http://davidshieh.cn/wp-content/uploads/2009/04/shiehnews-eer-300x213.png" alt="ShiehNews 关系图" title="shiehnews-eer" width="300" height="213" class="size-medium wp-image-121" />[/caption]\r\n\r\nMySQL Workbench同样支持将关系图转成sql文件, 点击File, 选择Export->Forward Engineer SQL create script...即可.', 1, '2009-04-24 00:38:50', '2009-04-24 00:38:50', 0, 0, 'database-modeling-mysql-workbench'),
( '使用Yii优秀的CWebLogRoute组件', '用yiic生成的代码, 已经自带了log系统, 但是这个log是基于文件, 我们想查看一个页面都执行哪个sql语句的时候, 就需要加入另外一个log组件了.\n\n修改main.php, 将下面的代码加入routes里, 完成后的代码如下:\n<pre lang="PHP">\n''routes''=>array(\n array(\n ''class'' => ''CWebLogRoute'',\n ''levels'' => ''trace,info,error,warning'',\n ''categories'' => ''system.db.*'',\n ),\n array(\n ''class''=>''CFileLogRoute'',\n ''levels''=>''error, warning, watch'',\n ''categories'' => ''system.*''\n ),\n),\n</pre>\n\n如果不需要计入文件的话, 可以将CFileLogRoute这段去掉, 不过作为产品发布的话, 记录log文件倒是必须的.', 1, '2009-04-26 00:37:21', '2009-04-26 00:37:21', 0, 0, '%e4%bd%bf%e7%94%a8yii%e4%bc%98%e7%a7%80%e7%9a%84cweblogroute%e7%bb%84%e4%bb%b6'),
( 'ShiehNews 0.2版发布', '最近对ShiehNews进行了一些更改, 发布第二个版本, 就暂时叫为0.2版吧.\n\n数据库建表命令在压缩包里的sql文件里.\n\n欢迎大家提意见!~\n\n<a href="http://davidshieh.cn/wp-content/uploads/2009/05/shiehnews-yii-02-beta.rar">ShiehNews-yii-02-beta</a>\n\nP.S.感谢"Email是真的"仁兄的提醒~发现了我CategoryController的一个小问题\n自己太粗心了~弄出来个语法错误~\n\n修改CategoryController里的update Action, 代码如下:\n<pre lang="PHP">\n public function actionUpdate() {\n $category=$this->loadCategory();\n if(isset($_POST[''Category'']))\n {\n $category->attributes=$_POST[''Category''];\n if($category->save())\n $this->redirect(array(''show'',''id''=>$category->id));\n }\n $this->render(''update'',array(''category''=>$category));\n }\n</pre>', 1, '2009-05-04 00:52:25', '2009-05-04 00:52:25', 0, 0, 'shiehnews-02%e7%89%88%e5%8f%91%e5%b8%83');
